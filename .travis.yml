---
sudo: disabled
language: c
os: linux
after_script: make fclean
stage:
- Checks
- Build c90
- Build c99
- Build c11
- Build c18
- Tests
matrix:
    include:
    -   stage: Checks
        script:
        - sudo apt-get install -y python3-yaml
        - python3 .travis_gen.py test.out
        - diff test.out .travis.yml
        - rm -f test.out
        after_script: make fclean
        env:
            NAME: Verify .travis.yml file
    -   stage: Checks
        script:
        - make -C libft
        - find libft -name "*.c" | sed 's/\.c//g' | sort > c_files
        - find libft -name "*.o" | sed 's/\.o//g' | sort > o_files
        - diff c_files o_files
        - rm -f c_files o_files
        after_script: make fclean
        env:
            NAME: Verify unused file
    -   stage: Build c90
        script: make -C libft -f test_docker.mk gcc VERSION_GCC_DOCKER=5 TEST_CMD="make
            ADDITIONAL_FLAGS=\"-std=c90\""
        after_script: make fclean
        env:
            NAME: Build libft with gcc 5
    -   stage: Build c90
        script: make -C libft -f test_docker.mk gcc VERSION_GCC_DOCKER=6 TEST_CMD="make
            ADDITIONAL_FLAGS=\"-std=c90\""
        after_script: make fclean
        env:
            NAME: Build libft with gcc 6
    -   stage: Build c90
        script: make -C libft -f test_docker.mk gcc VERSION_GCC_DOCKER=7 TEST_CMD="make
            ADDITIONAL_FLAGS=\"-std=c90\""
        after_script: make fclean
        env:
            NAME: Build libft with gcc 7
    -   stage: Build c90
        script: make -C libft -f test_docker.mk gcc VERSION_GCC_DOCKER=8 TEST_CMD="make
            ADDITIONAL_FLAGS=\"-std=c90\""
        after_script: make fclean
        env:
            NAME: Build libft with gcc 8
    -   stage: Build c90
        script: make -C libft -f test_docker.mk gcc TEST_CMD="make ADDITIONAL_FLAGS=\"-std=c90\""
        after_script: make fclean
        env:
            NAME: Build libft with gcc latest
    -   stage: Build c90
        script: make -C libft -f test_docker.mk clang TEST_CMD="make ADDITIONAL_FLAGS=\"-std=c90\""
        after_script: make fclean
        env:
            NAME: Build libft with clang (latest on Debian)
    -   stage: Build c99
        script: make -C libft -f test_docker.mk gcc VERSION_GCC_DOCKER=5 TEST_CMD="make
            ADDITIONAL_FLAGS=\"-std=c99\""
        after_script: make fclean
        env:
            NAME: Build libft with gcc 5
    -   stage: Build c99
        script: make -C libft -f test_docker.mk gcc VERSION_GCC_DOCKER=6 TEST_CMD="make
            ADDITIONAL_FLAGS=\"-std=c99\""
        after_script: make fclean
        env:
            NAME: Build libft with gcc 6
    -   stage: Build c99
        script: make -C libft -f test_docker.mk gcc VERSION_GCC_DOCKER=7 TEST_CMD="make
            ADDITIONAL_FLAGS=\"-std=c99\""
        after_script: make fclean
        env:
            NAME: Build libft with gcc 7
    -   stage: Build c99
        script: make -C libft -f test_docker.mk gcc VERSION_GCC_DOCKER=8 TEST_CMD="make
            ADDITIONAL_FLAGS=\"-std=c99\""
        after_script: make fclean
        env:
            NAME: Build libft with gcc 8
    -   stage: Build c99
        script: make -C libft -f test_docker.mk gcc TEST_CMD="make ADDITIONAL_FLAGS=\"-std=c99\""
        after_script: make fclean
        env:
            NAME: Build libft with gcc latest
    -   stage: Build c99
        script: make -C libft -f test_docker.mk clang TEST_CMD="make ADDITIONAL_FLAGS=\"-std=c99\""
        after_script: make fclean
        env:
            NAME: Build libft with clang (latest on Debian)
    -   stage: Build c11
        script: make -C libft -f test_docker.mk gcc VERSION_GCC_DOCKER=5 TEST_CMD="make
            ADDITIONAL_FLAGS=\"-std=c11\""
        after_script: make fclean
        env:
            NAME: Build libft with gcc 5
    -   stage: Build c11
        script: make -C libft -f test_docker.mk gcc VERSION_GCC_DOCKER=6 TEST_CMD="make
            ADDITIONAL_FLAGS=\"-std=c11\""
        after_script: make fclean
        env:
            NAME: Build libft with gcc 6
    -   stage: Build c11
        script: make -C libft -f test_docker.mk gcc VERSION_GCC_DOCKER=7 TEST_CMD="make
            ADDITIONAL_FLAGS=\"-std=c11\""
        after_script: make fclean
        env:
            NAME: Build libft with gcc 7
    -   stage: Build c11
        script: make -C libft -f test_docker.mk gcc VERSION_GCC_DOCKER=8 TEST_CMD="make
            ADDITIONAL_FLAGS=\"-std=c11\""
        after_script: make fclean
        env:
            NAME: Build libft with gcc 8
    -   stage: Build c11
        script: make -C libft -f test_docker.mk gcc TEST_CMD="make ADDITIONAL_FLAGS=\"-std=c11\""
        after_script: make fclean
        env:
            NAME: Build libft with gcc latest
    -   stage: Build c11
        script: make -C libft -f test_docker.mk clang TEST_CMD="make ADDITIONAL_FLAGS=\"-std=c11\""
        after_script: make fclean
        env:
            NAME: Build libft with clang (latest on Debian)
    -   stage: Build c18
        script: make -C libft -f test_docker.mk gcc VERSION_GCC_DOCKER=8 TEST_CMD="make
            ADDITIONAL_FLAGS=\"-std=c18\""
        after_script: make fclean
        env:
            NAME: Build libft with gcc 8
    -   stage: Build c18
        script: make -C libft -f test_docker.mk gcc TEST_CMD="make ADDITIONAL_FLAGS=\"-std=c18\""
        after_script: make fclean
        env:
            NAME: Build libft with gcc latest
    -   stage: Tests
        script: bash tests/test.bash 001_ctype_single
        after_script: make fclean
        env:
            NAME: 001_ctype_single
    -   stage: Tests
        script: bash tests/test.bash 002_math_single
        after_script: make fclean
        env:
            NAME: 002_math_single
...
